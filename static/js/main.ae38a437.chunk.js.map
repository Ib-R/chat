{"version":3,"sources":["util/util.js","util/messages.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["GetCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","Messages","className","this","props","message","React","Component","Login","state","showMessages","server","that","id","onSubmit","e","preventDefault","fetch","method","body","target","username","value","password","room","headers","then","res","json","data","user","Date","now","authenticate","setState","console","log","catch","err","src","process","alt","width","height","type","placeholder","htmlFor","onChange","Room","lazy","App","isAuthenticated","logout","fallback","exact","path","render","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","getElementById","URL","href","origin","addEventListener","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae38a437.chunk.js","sourcesContent":["export function GetCookie(cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","import React from \"react\";\r\n\r\nexport class Messages extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className='alert alert-danger'>{this.props.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Messages } from \"../util/messages\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showMessages:false,\r\n            message: null,\r\n            server: null,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var that = this // binding This keyword to variable for accessbilty reasons\r\n        const {server, message, showMessages} = this.state;\r\n\r\n        function setServer(e){\r\n            that.setState({server: e.target.value})\r\n        }    \r\n\r\n        const login = (e) => {\r\n            e.preventDefault()\r\n            // const data = {username: e.target.username.value, password: e.target.password.value}\r\n            fetch(\"//\"+server+\"/login/\",\r\n                {\r\n                    method: \"POST\",\r\n                    body: `username=${e.target.username.value}&password=${e.target.password.value}&room=${e.target.room.value}`,\r\n                    headers:({\r\n                        \"Content-Type\":\"application/x-www-form-urlencoded\"\r\n                    })\r\n                })\r\n            .then((res)=>{\r\n                res.json()\r\n                .then((data)=>{                    \r\n                    if(data.user){\r\n                        document.cookie = \"username=\"+data.user+\"; expires=\"+Date(Date.now()+9000)+\"\";\r\n                        document.cookie = \"server=\"+server+\"; expires=\"+Date(Date.now()+9000)+\"\";\r\n                        document.cookie = \"room=\"+data.room+\"; expires=\"+Date(Date.now()+9000)+\"\";\r\n                        this.props.authenticate();\r\n                    }else{\r\n                        this.setState({showMessages:true}); // show the message div\r\n                        this.setState({message: data.message.message}); // assing the message to the state\r\n                        console.log(data.message);\r\n                    }\r\n                });\r\n            })\r\n            .catch((err)=> console.log(\"login error:\",err));\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n\r\n                <div id=\"userFormArea\">\r\n                    <form onSubmit={login} className=\"form-signin\" id=\"userForm\">\r\n                        <div className=\"text-center\">\r\n                            <img className=\"mb-4\" src={`${process.env.PUBLIC_URL}/bg/thelogo.png`} alt=\"\" width=\"72\" height=\"72\"/>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                        </div>\r\n\r\n                        { showMessages ? <Messages message={message} /> : null }\r\n\r\n                        <div className=\"form-label-group\">\r\n                            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" className=\"form-control\" id=\"username\"/>\r\n                            <label htmlFor=\"username\">Enter Username</label>\r\n                        </div>  \r\n                        <div className=\"form-label-group\"> \r\n                            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" className=\"form-control\" id=\"password\"/>\r\n                            <label htmlFor=\"password\">Enter Password</label>\r\n                        </div>  \r\n                        <div className=\"form-label-group\"> \r\n                            <input type=\"text\" placeholder=\"Enter Room\" name=\"room\" className=\"form-control\" id=\"room\"/>\r\n                            <label htmlFor=\"room\">Enter Room</label>\r\n                        </div>  \r\n                        <div className=\"form-label-group\">\r\n                            <input onChange={setServer} type=\"text\" placeholder=\"Enter Server\" name=\"server\" className=\"form-control\" id=\"server\"/>\r\n                            <label htmlFor=\"server\">Enter Server</label>\r\n                        </div> \r\n                        <br/>\r\n                        <input type=\"submit\" className=\"btn btn-lg btn-primary btn-block\" value=\"Login\" />\r\n                        <p className=\"text-center mt-5 mb-3 text-muted\">&copy;2018 - 2020</p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom'\nimport { GetCookie } from \"./util/util\";\n\nimport Login from './components/Login';\nconst Room = React.lazy(() => import('./components/Room')); // Code splitting\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      room: '',\n      isAuthenticated: GetCookie(\"username\") ? true : false\n    }\n  }\n\n  componentDidMount() {\n    if(GetCookie(\"room\") !== \"\"){\n      this.setState({room: GetCookie(\"room\")});\n    }\n  }\n\n  render() {\n    const {room, isAuthenticated} = this.state;\n\n    const authenticate = () => {      \n      this.setState({room: GetCookie(\"room\"), isAuthenticated: true});\n    }\n\n    const logout = () => {\n      document.cookie = 'username=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'; \n      document.cookie = 'room=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'; \n      document.cookie = `server=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n      this.setState({room: '', isAuthenticated: false});\n    }\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Suspense fallback={<h1 className=\"text-center\">Loading...</h1>}>\n            <Switch>\n              <Route exact path={`${process.env.PUBLIC_URL}/` } render={() => isAuthenticated ?\n                  <Redirect to={`${process.env.PUBLIC_URL}/room`} /> :\n                  <Login authenticate={authenticate} />}/>\n              <Route exact path={`${process.env.PUBLIC_URL}/room`} render={() => isAuthenticated ?\n                  <Room room={room} logout={logout} /> :\n                  <Redirect to={`${process.env.PUBLIC_URL}/` } /> }/>\n               <Redirect to={`${process.env.PUBLIC_URL}/`} /> {/* 404 */}\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}